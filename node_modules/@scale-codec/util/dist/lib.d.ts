/**
 * `@scale-codec/*` shared utility functions
 * @packageDocumentation
 */

/**
 * Good-old assert
 */
export declare function assert(condition: unknown, message: string | (() => string)): asserts condition;

/**
 * Creates a concatenated `Uint8Array` from the inputs.
 */
export declare function concatBytes(iterable: Iterable<Uint8Array> | Array<Uint8Array>): Uint8Array;

/**
 * Parses pretty space-separated hex into bytes
 * @param hex - Space-separated bytes in hex repr
 * @example
 * ```ts
 * fromHex('01 02 03') // new Uint8Array([1, 2, 3])
 * ```
 */
export declare function fromHex(hex: string): Uint8Array;

/**
 * Returns value from `map` by `key` and throws if there is no such key
 */
export declare function mapGetUnwrap<K, V>(map: Map<K, V>, key: K): V;

/**
 * Makes pretty-hex from bytes array, like `01 a5 f0`
 *
 * @example
 * ```ts
 * toHex(new Uint8Array([1, 11, 3])) // '01 a1 03'
 * ```
 */
export declare function toHex(v: Uint8Array): string;

export { }
