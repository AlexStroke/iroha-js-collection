{
  "name": "@scale-codec/enum",
  "version": "1.1.0",
  "description": "Simple JavaScript abstraction around Rust Enums",
  "keywords": [
    "rust",
    "enum",
    "typescript"
  ],
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/soramitsu/scale-codec-js-library.git"
  },
  "bugs": {
    "url": "https://github.com/soramitsu/scale-codec-js-library/issues"
  },
  "homepage": "https://soramitsu.github.io/scale-codec-js-library/",
  "main": "./dist/lib.cjs",
  "files": [
    "dist",
    "CHANGELOG.md"
  ],
  "module": "./dist/lib.mjs",
  "types": "./dist/lib.d.ts",
  "exports": {
    ".": {
      "import": "./dist/lib.mjs",
      "require": "./dist/lib.cjs"
    },
    "./*": "./*"
  },
  "readme": "# enum ![build status](https://img.shields.io/github/checks-status/soramitsu/scale-codec-js-library/master) ![version](https://img.shields.io/npm/v/@scale-codec/enum) ![license](https://img.shields.io/npm/l/@scale-codec/enum)\n\nLightweight tool for working with Rust enums in JavaScript (with TypeScript support).\n\n[Documentation](https://soramitsu.github.io/scale-codec-js-library/guide/enum)\n\n## Example\n\n```ts\nimport { Enum } from '@scale-codec/enum'\n\n// Define enum\ntype Event = Enum<\n  | 'PageLoaded'\n  | ['KeyPress', string]\n  | [\n      'MouseClick',\n      {\n        x: number\n        y: number\n      },\n    ]\n>\n\n// Construct actual value (100% typed)\nconst event1: Event = Enum.variant('KeyPress', '<enter>')\nconst event2: Event = Enum.variant('MouseClick', { x: 5, y: 10 })\nconst event3: Event = Enum.variant('PageLoaded')\n\n// Access to the content\n\n// with `is` & `as`\nif (event1.is('MouseClick')) {\n  const { x, y } = event1.as('MouseClick')\n}\n\n// with match\nevent1.match({\n  PageLoaded() {\n    console.log('Loaded')\n  },\n  MouseClick({ x, y }) {\n    console.log('Click at %o : %o', x, y)\n  },\n  KeyPress(key) {\n    console.log('Key pressed:', key)\n  },\n})\n```\n"
}